[tool.isort]
profile = "black"
skip_glob = ["**/.git*", "**/.env*", "**/venv/*", "**/venvwsl/*","**/docs/*"]
force_single_line = true
line_length = 140
# verbose = true
skip_gitignore = true
color_output = true

[tool.pylint.messages_control]
max-line-length = 140
disable = [
  "broad-except",
  "redefined-builtin",
  # "missing-docstring",
  "unused-argument",
  "no-value-for-parameter",
  # "no-member",
  "no-else-return",
  "bad-whitespace",
  "bad-continuation",
  "line-too-long",
  # "fixme",
  "protected-access",
  "too-few-public-methods",
  "logging-fstring-interpolation",
]

[tool.pylint.design]
# limiting the number of returns might discourage
# the use of guard clauses. So we increase the
# allowed number of returns from 6 to 8
max-returns = 8


[tool.commitizen]
name = "cz_conventional_commits"
annotated_tag = true
update_changelog_on_bump = true
version = "v0.0.0"
tag_format = "v$major.$minor.$patch$prerelease"
version_files = [
    "pyproject.toml:version",
    "__version__.py"
]


[tool.black]
line-length = 99  # Specify the line length
target-version = ['py38']  # Specify your Python version
include = '\.pyi?$'
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.venvwsl
  | \.vscode
  | \__pycache__
  | _build
  | buck-out
  | build
  | dist
)/
'''
